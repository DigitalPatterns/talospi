apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.mongodb.namespace }}
  name: {{ include "mongodb.fullname" . }}
  {{- if .Values.mongodb.deploymenttAnnotations }}
  annotations:
    {{- with .Values.mongodb.deploymenttAnnotations }}
      {{- range $key, $value := . }}
      {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
      {{- end }}
      {{- end }}
  {{- end }}
  labels:
    {{- include "mongodb.commonLabels" . | nindent 4 }}
    service: {{ include "mongodb.fullname" . }}
spec:
  serviceName: {{ include "mongodb.fullname" . | quote }}
  replicas: {{ .Values.mongodb.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "mongodb.fullname" . }}
      spec:
        storageClassName: {{ .Values.mongodb.pv.storage.className }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.mongodb.pv.storage.capacity }}
  template:
    metadata:
      labels:
        name: {{ include "mongodb.fullname" . }}
        service: {{ include "mongodb.fullname" . }}
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
        {{- with .Values.mongodb.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.mongodb.podAnnotations }}
          {{- range $key, $value := . }}
          {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
          {{- end }}
          {{- end }}
    spec:
      restartPolicy: {{ .Values.mongodb.restartPolicy }}
      securityContext:
        {{- toYaml .Values.mongodb.securityContext | nindent 8 }}
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: certs
          secret:
            secretName: {{ include "mongodb.fullname" . }}-pod-cert
        - name: ca
          secret:
            secretName: ca
        - name: keyfile
          secret:
            secretName: mongo-keyfile
        - name: certificates
          emptyDir: {}
      initContainers:
      - name: copy-config
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: Always
        command:
          - /bin/bash
          - -ec
        args:
          - |
            cp /certs/tls.crt /certificates/mongo.pem && \
            printf "\n" >> /certificates/mongo.pem && \
            echo -en "$(cat /ca/ca.crt)" >> /certificates/mongo.pem && \
            printf "\n" >> /certificates/mongo.pem && \
            echo -en "$(cat /certs/tls.key)" >> /certificates/mongo.pem && \
            cp /ca/ca.crt /certificates/ca.crt && \
            cp /keyfile/mongo.key /certificates/keyfile && \
            chown mongodb /certificates/* && \
            chmod 0400 /certificates/*  && \
            ls -l /certificates/
        volumeMounts:
          - name: certificates
            mountPath: /certificates
          - name: certs
            mountPath: /certs
          - name: ca
            mountPath: /ca
          - name: keyfile
            mountPath: /keyfile
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.mongodb.containerSecurityContext | nindent 12 }}
        {{- with .Values.mongodb.lifecycleHooks }}
        lifecycle:
          {{- tpl . $ | nindent 12 }}
        {{- end }}
        args:
          - --replSet=rs0
          - --auth
          - --tlsMode=preferTLS
          - --tlsCertificateKeyFile=/certificates/mongo.pem
          - --tlsCAFile=/certificates/ca.crt
          - --tlsClusterFile=/certificates/mongo.pem
          - --keyFile=/certificates/keyfile
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: password
        ports:
        - containerPort: {{ .Values.mongodb.service.targetPort }}
          protocol: {{ .Values.mongodb.service.protocol }}
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/db
          name: {{ include "mongodb.fullname" . }}
        - name: certificates
          mountPath: /certificates
