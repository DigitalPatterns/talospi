apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ .Values.keycloak.namespace }}
  name: {{ include "keycloak.fullname" . }}
  {{- if .Values.keycloak.deploymenttAnnotations }}
  annotations:
    {{- with .Values.keycloak.deploymenttAnnotations }}
      {{- range $key, $value := . }}
      {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
      {{- end }}
      {{- end }}
  {{- end }}
  labels:
    {{- include "keycloak.commonLabels" . | nindent 4 }}
    service: {{ include "keycloak.fullname" . }}
spec:
  serviceName: "keycloak"
  replicas: {{ .Values.keycloak.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: {{ include "keycloak.fullname" . }}
        service: {{ include "keycloak.fullname" . }}
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
        {{- with .Values.keycloak.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.keycloak.podAnnotations }}
          {{- range $key, $value := . }}
          {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
          {{- end }}
          {{- end }}
    spec:
      restartPolicy: {{ .Values.keycloak.restartPolicy }}
      securityContext:
        {{- toYaml .Values.keycloak.securityContext | nindent 8 }}
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
        imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.keycloak.containerSecurityContext | nindent 12 }}
        {{- with .Values.keycloak.lifecycleHooks }}
        lifecycle:
          {{- tpl . $ | nindent 12 }}
        {{- end }}
        env:
        - name: KEYCLOAK_LOGLEVEL
          value: DEBUG
        - name: WILDFLY_LOGLEVEL
          value: INFO
        - name: DB_VENDOR
          value: postgres
        - name: DB_ADDR
          value: {{ .Values.keycloak.db.hostname }}
        - name: DB_PORT
          value: "{{ .Values.keycloak.db.port }}"
        - name: DB_DATABASE
          value: {{ .Values.keycloak.db.name }}
#        - name: KEYCLOAK_FRONTEND_URL
#          value: {{ include "keycloak.fullname" . }}.{{ .Values.keycloak.domainname }}
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        envFrom:
        - secretRef:
            name: keycloak
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: {{ .Values.keycloak.service.targetPort }}
          protocol: {{ .Values.keycloak.service.protocol }}
        resources:
          {{- toYaml .Values.keycloak.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/jboss/startup-scripts/keycloak.cli
          name: startup
          readOnly: true
          subPath: keycloak.cli
      enableServiceLinks: true
      nodeSelector:
        beta.kubernetes.io/arch: amd64
      volumes:
      - configMap:
          defaultMode: 365
          items:
          - key: keycloak.cli
            path: keycloak.cli
          name: keycloak-startup
        name: startup
  updateStrategy:
    type: RollingUpdate

