{{- if eq .Values.keycloak.ingress.class "nginx"}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: {{ .Values.keycloak.ingress.class }}
    ingress.kubernetes.io/protocol: http
    nginx.ingress.kubernetes.io/backend-protocol: http
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 400m
    nginx.ingress.kubernetes.io/proxy-read-timeout: 120s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 120s
  namespace: {{ .Values.keycloak.namespace }}
  name: {{ include "keycloak.fullname" . }}
spec:
  rules:
    - host: {{ .Values.keycloak.ingress.name }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "keycloak.fullname" . }}
                port:
                  number: {{ .Values.keycloak.service.port }}
  # This section is only required if TLS is to be enabled for the Ingress
  tls:
    - hosts:
        - {{ .Values.keycloak.ingress.name }}
      secretName: {{ include "keycloak.fullname" . }}-ext-cert
  {{- else }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "keycloak.fullname" . }}
  namespace: {{ .Values.keycloak.namespace }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`{{ .Values.keycloak.ingress.name }}`)
      services:
        - name: {{ include "keycloak.fullname" . }}
          port: {{ .Values.keycloak.service.port }}
  tls:
    secretName: {{ include "keycloak.fullname" . }}-ext-cert
{{- end }}
