apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.postgresql.namespace }}
  name: {{ include "postgresql.fullname" . }}
  {{- if .Values.postgresql.deploymenttAnnotations }}
  annotations:
    {{- with .Values.postgresql.deploymenttAnnotations }}
      {{- range $key, $value := . }}
      {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
      {{- end }}
      {{- end }}
  {{- end }}
  labels:
    {{- include "postgresql.commonLabels" . | nindent 4 }}
    service: {{ include "postgresql.fullname" . }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.postgresql.replicas }}
  revisionHistoryLimit: 3
  minReadySeconds: 5
  selector:
    matchLabels:
      {{- include "postgresql.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ include "postgresql.fullname" . }}
        service: {{ include "postgresql.fullname" . }}
        {{- include "postgresql.selectorLabels" . | nindent 8 }}
        {{- with .Values.postgresql.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.postgresql.podAnnotations }}
          {{- range $key, $value := . }}
          {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
          {{- end }}
          {{- end }}
    spec:
      restartPolicy: {{ .Values.postgresql.restartPolicy }}
      securityContext:
        {{- toYaml .Values.postgresql.securityContext | nindent 8 }}
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "postgresql.fullname" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.postgresql.containerSecurityContext | nindent 12 }}
        {{- with .Values.postgresql.lifecycleHooks }}
        lifecycle:
          {{- tpl . $ | nindent 12 }}
        {{- end }}
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql
              key: password
        ports:
        - containerPort: {{ .Values.postgresql.service.targetPort }}
          protocol: {{ .Values.postgresql.service.protocol }}
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
